@mixin butterflyFluttering($butterflyWingHeight: 100px, $selector: "#butterfly") {
#{$selector} {
  
  $flowerWidth: $butterflyWingHeight * 6;
  
  transform: rotateZ(20deg) rotate3d(0, 1, 0, 0deg) scale3d(0.5, 0.5, 0.5);
  transform-origin: 51% 50%;
  transform-style: preserve-3d;
  @include backgroundSvg("blue_flower_wo.svg", $flowerWidth);

  position: absolute;
  top: -100px;
  right: 210px;
  z-index: 1002;

.wing {
  
  &:before, &:after {
    content: '';
    position: absolute;
    border-radius: 50%;

    background: -moz-radial-gradient(center, ellipse cover, rgba(0,0,0,0.65) 0%, rgba(0,0,0,0) 100%); /* FF3.6+ */
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(0,0,0,0.65)), color-stop(100%,rgba(0,0,0,0))); /* Chrome,Safari4+ */
    background: -webkit-radial-gradient(center, ellipse cover, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%); /* Chrome10+,Safari5.1+ */
    background: -o-radial-gradient(center, ellipse cover, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%); /* Opera 12+ */
    background: -ms-radial-gradient(center, ellipse cover, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%); /* IE10+ */
    background: radial-gradient(ellipse at center, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a6000000', endColorstr='#00000000',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */

    box-shadow: 0 0 $butterflyWingHeight/2 rgba(0,0,0,0.25);
  }
  &:before {
    top: $butterflyWingHeight * .6;
    left: $butterflyWingHeight * 3.7;
    width: $butterflyWingHeight * 1.5;
    height: $butterflyWingHeight * 1.4;
  }

  position: absolute;
  @include transform(rotateX(30deg)  translate3d(-(2*$butterflyWingHeight), 0px, 0px) rotate3d(0, 1, 0, 160deg));
  transform-origin: top right;
  -webkit-transform-origin: top right;
  left: $butterflyWingHeight;
  top: 50%;
  margin-top: -$butterflyWingHeight;
  
  @include backgroundSvg("04_butterfly.svg", $butterflyWingHeight * 4);
  background-position: $butterflyWingHeight * 2 0;

  @include animation(rightwingani 6s ease-out infinite);
  
  &.left{
    @include transform(rotateX(30deg) rotate3d(0, 1, 0, 0deg));
    @include animation(leftwingani 6s ease-out infinite);
    left: -$butterflyWingHeight;
  }
}
} // end of selector
@include keyframes(rightwingani) {
	from {
    @include transform(rotateX(30deg) translate3d(-(2*$butterflyWingHeight), 0px, 0px) rotate3d(0, 1, 0, 160deg));
	}
	50% {
    @include transform(rotateX(30deg) translate3d(-(2*$butterflyWingHeight), 0px, 0px) rotate3d(0, 1, 0, 100deg));
	}
	to{
    @include transform(rotateX(30deg) translate3d(-(2*$butterflyWingHeight), 0px, 0px) rotate3d(0, 1, 0, 160deg));
	}
}

@include keyframes(leftwingani) {
	from {
    @include transform(rotateX(30deg) rotate3d(0, 1, 0, 0deg));
	}
	50% {
    @include transform(rotateX(30deg) rotate3d(0, 1, 0, 80deg));
	}
	to{
    @include transform(rotateX(30deg) rotate3d(0, 1, 0, 00deg));
	}
}

}


@include butterflyFluttering(50px);